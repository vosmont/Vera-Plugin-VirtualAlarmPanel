<?xml version="1.0"?>
<implementation>
	<functions>
		local VirtualAlarmPanel

		function VirtualAlarmPanel_startup (lul_device)
			luup.log("VirtualAlarmPanel startup")
			VirtualAlarmPanel = require("L_VirtualAlarmPanel1")
			if (VirtualAlarmPanel ~= nil) then
				return VirtualAlarmPanel.startup(lul_device)
			else
				return false, "Can't load library"
			end
		end
	</functions>
	<startup>VirtualAlarmPanel_startup</startup>
	<actionList>
		<!-- Panel status -->
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>GetStatus</name>
			<run>
				luup.variable_get("urn:upnp-org:serviceId:VirtualAlarmPanel1", "Status", lul_device)
			</run>
		</action>
		<!-- Alarm status -->
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>SetAlarmStatus</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then VirtualAlarmPanel.setAlarmStatus(lul_device, lul_settings) end
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>GetAlarmStatus</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then return VirtualAlarmPanel.getAlarmStatus(lul_device, lul_settings) end
			</run>
		</action>
		<!-- Alarm acknowledge -->
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>SetAlarmAcknowledge</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then VirtualAlarmPanel.setAlarmAcknowledge(lul_device, lul_settings) end
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>GetAlarmAcknowledge</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then return VirtualAlarmPanel.getAlarmAcknowledge(lul_device, lul_settings) end
			</run>
		</action>
		<!-- Alarm -->
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>AddAlarm</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then VirtualAlarmPanel.addAlarm(lul_device, lul_settings) end
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>RemoveAlarm</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then VirtualAlarmPanel.removeAlarm(lul_device, lul_settings) end
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>SetAlarmName</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then VirtualAlarmPanel.setAlarmName(lul_device, lul_settings) end
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>SetAlarmPos</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then VirtualAlarmPanel.setAlarmPos(lul_device, lul_settings) end
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>GetAlarmName</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then return VirtualAlarmPanel.getAlarmName(lul_device, lul_settings) end
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>GetAlarmId</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then return VirtualAlarmPanel.getAlarmId(lul_device, lul_settings) end
			</run>
		</action>
		<!-- Options -->
		<action>
			<serviceId>urn:upnp-org:serviceId:VirtualAlarmPanel1</serviceId>
			<name>SetOptions</name>
			<run>
				if (VirtualAlarmPanel ~= nil) then VirtualAlarmPanel.setOptions(lul_device, lul_settings) end
			</run>
		</action>
	</actionList>
</implementation>
